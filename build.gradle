plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id 'net.azureaaron.mod.annotation-processor'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://maven.isxander.dev/releases"

		content {
			includeGroup "dev.isxander"
			includeGroup "org.quiltmc.parsers"
		}
	}

	maven {
		url "https://maven.isxander.dev/snapshots"

		content {
			includeGroup "dev.isxander"
		}
	}

	exclusiveContent {
		forRepository {
			maven { url "https://maven.terraformersmc.com" }
		}

		filter {
			includeGroup "com.terraformersmc"
		}
	}

	exclusiveContent {
		forRepository {
			maven { url "https://maven.azureaaron.net/releases" }
		}

		filter {
			includeGroup "net.azureaaron"
		}
	}
}

dependencies {
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// Loom does not always add this
	implementation "ca.weblite:java-objc-bridge:1.1"

	//Mr. Jackson Json is no more :(

	include modImplementation("dev.isxander:yet-another-config-lib:${yacl_version}-fabric")

	modImplementation "com.terraformersmc:modmenu:${modmenu_version}"

	include modImplementation("net.azureaaron:hm-api:${hm_api_version}")

	include implementation("net.azureaaron:networth-calculator:${networth_calculator_version}")
	
	include implementation("net.azureaaron:legacy-item-dfu:${legacy_item_dfu_version}")
}

loom {
	accessWidenerPath = file("src/main/resources/aaron-mod.accesswidener")

	mixin {
		useLegacyMixinAp = false
	}
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.20.5 (24w14a) upwards uses Java 21.
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	//withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

test {
	useJUnitPlatform()

	systemProperty("IS_TEST_ENV", "true")
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}


// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}